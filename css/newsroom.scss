---
# Front matter comment to ensure Jekyll properly reads file.
---

html,body{
  overflow-x: hidden !important;
  overflow-y: auto !important;
}

// ##################################################################################

$mainHeaderHeightDesktop: 100px;
$mainHeaderHeightMobile:  50px;

$secondaryHeaderHeightDesktop: 550px;
$secondaryHeaderHeightMobile: 590px;

$qitascOrange: #f7941e;
$qitascDarkGrey: #4a4a4a;
$qitascLightGrey: #ebeceb;
$qitascGrey: #bfc2c9;
$qitascDarkerGrey: #32323c;
$qitascGreyVariation: #64646a;
$qitascTeal: #0094ac;

$navigationButtonFontSizeDesktop:     20px;
$navigationButtonFontSizeMobile:      13px;
$navigationButtonFontSizeSmallMobile: 11px;

// ##################################################################################
// ##################################################################################
//                                                                            #######
//            responsiveStageZero ::   First Responsive from 0 - 410 px       #######
//            responsiveStageOne ::    First Responsive from 411 - 767 px     #######
//            responsiveStageTwo ::    Second Responsive from 768px - 1199px  #######
//            responsiveStageThree ::  Third Responsive 1119px+               #######
//                                                                            #######
// ##################################################################################
// ##################################################################################

$stageZero: 410px;
$stageOneLower: 411px;
$stageOneHigher: 767px;
$stageTwoLower: 768px;
$stageTwoHigher: 1199px;
$stageThree: 1199px;

@mixin stage00 {
  @media (max-width: $stageZero) { @content; }
}

@mixin stage01 {
  @media (min-width:$stageOneLower) and (max-width:$stageOneHigher)  { @content; }
}

@mixin stage02 {
  @media (min-width:$stageTwoLower) and (max-width:$stageTwoHigher) { @content; }
}

@mixin stage03 {
  @media (min-width: $stageThree) { @content; }
}

// ##################################################################################
// ##################################################################################
//                                                                            #######
//            Tools to extend to other classes, like shadow or transitions    #######
//                                                                            #######
// ##################################################################################
// ##################################################################################

.transitionColor {
  -webkit-transition: color .2s ease-in-out;
  -moz-transition: color .2s ease-in-out;
  -ms-transition: color .2s ease-in-out;
  -o-transition: color .2s ease-in-out;
}

.transitionHeight {
    -webkit-transition: height .6s ease-in-out;
    -moz-transition: height .6s ease-in-out;
    -ms-transition: height .6s ease-in-out;
    -o-transition: height .6s ease-in-out;
}

.transitionOpacity {
    -webkit-transition: opacity .3s linear 1s;
    transition: opacity .3s linear 1s;
}
.shadowBottom  {
    -webkit-box-shadow: 0 10px 6px -8px rgba(0,0,0,0.5);
       -moz-box-shadow: 0 10px 6px -8px rgba(0,0,0,0.5);
            box-shadow: 0 10px 6px -8px rgba(0,0,0,0.5);
}

.transitionMargin {
  -webkit-transition: margin 0.5s ease-in;
  -moz-transition: margin 0.5s ease-in;
  -o-transition: margin 0.5s ease-in;
  transition: margin 0.5s ease-in;
}

.transitionMarginSlower {
  -webkit-transition: margin 1s ease-out;
  -moz-transition: margin 1s ease-out;
  -o-transition: margin 1s ease-out;
  transition: margin 1s ease-out;
}

.transitionAll {
  -webkit-transition: all 1s ease-in-out;
  -moz-transition: all 1s ease-in-out;
  -o-transition: all 1s ease-in-out;
  transition: all 1s ease-in-out;
}

.transitionBackground {
  -webkit-transition: background .2s ease-in-out;
  -moz-transition: background .2s ease-in-out;
  -ms-transition: background .2s ease-in-out;
  -o-transition: background .2s ease-in-out;
}

.transformScale {
  transform:scale(1.05);
  -webkit-transform:scale(1.05);
  -moz-transform:scale(1.05);
  -ms-transform:scale(1.05);
  -o-transform:scale(1.05);
}

.shadowBoxNice {
        box-shadow: 5px 17px 22px -8px rgba(9, 30, 66, 0.25), 0 0 5px rgba(9, 30, 66, 0.31);

}
// ##################################################################################
// ##################################################################################
//                                                                            #######
//            Main Newsroom Top Section, its representing the Styles in the   #######
//            files:                                                          #######
//            _layouts/newsroom.html                                          #######
//            Newsroom/index.html                                             #######
//            _includes/Newsroom/headerNewsroom.html                          #######
//                                                                            #######
// ##################################################################################
// ##################################################################################


.NewsroomArticleContainer {
  padding-top: 100px !important;
  background-image: url("../assets/images/newsroom/Textur_Newsroom.jpg");
  background-size: 15%;
  background-repeat: repeat;
}

.NewsroomArticleInnerContainer {
  @include stage00{margin-left: 20px !important; margin-right: 20px !important}
  @include stage01{margin-left: 20px !important; margin-right: 20px !important}

}
.NewsroomEntriesColumn {
  @include stage00{width: 200px !important;}
  @include stage01{width: 200px !important;}
  @include stage02{width: 300px !important;}
  @include stage03{width: 400px !important;}
}

.NewsroomImage {
  @extend .shadowBottom;
}
.NewsroomImage:hover {
  @extend .transformScale;
}
.qitasc-newsroom-container-entry {
  @extend .shadowBoxNice;
	width: 90%;
	margin-right:auto;
	margin-left:auto;
  @include stage00 {
		width: 95%;
		margin-top: 1rem;
		margin-bottom: 1rem;
		padding-top: 1rem;
		padding-left: 0.5rem;
		padding-right: 0.5rem;
	}
  @include stage01 {
    padding-top: 2rem;
    padding-left: 2rem;
    padding-right: 2rem;
    padding-bottom: 2rem;
    margin-top: 4rem;
    margin-bottom: 2rem;

  }
	@include stage02 {
		padding-top: 2rem;
		padding-left: 2rem;
		padding-right: 2rem;
		padding-bottom: 2rem;
		margin-top: 4rem;
		margin-bottom: 2rem;

	}
	@include stage03 {
		padding: 25px;
    margin-bottom: 25px;

	}

  background-position: center;
  background-repeat: no-repeat;
  background-color: $qitascLightGrey;
  text-decoration: none !important;
  img{
    width: 100%;
		opacity: 1;
		-webkit-transition: .3s ease-in-out;
		transition: .3s ease-in-out;
	}
	img:hover {
		opacity: 0.8;
	}
}

/* Video */
.vjs-big-play-button{
  display: none !important;
}

.js-lightbox-video-player-content{
  width: 100%;
  height: 100%;
  position: relative;
  padding: 0 !important;

  .video-js{
    width: 100%;
    height: 100%;
  }
}


.subtitleNewsroom {

  @include stage00 {font-size: 10px;}
  @include stage01 {font-size: 12px;}
  @include stage02 {font-size: 14px;}
  @include stage03 {font-size: 16px;}

	font-style:oblique;
	font-weight: bolder;
	margin: 1.2em 0 0.4em 0;
  color: $qitascDarkGrey;
  background-image: linear-gradient(120deg, $qitascLightGrey 0%, rgba(0,0,0,0.1) 100%);
  background-repeat: no-repeat;
  background-size: 100% 0.2em;
  background-position: 0 88%;
}


.newsroom-entry-title {
	color: $qitascDarkGrey;
  padding-bottom: 8px;
  @include stage00 {font-size: 14px;}
  @include stage01 {font-size: 16px;}
  @include stage02 {font-size: 18px;}
  @include stage03 {font-size: 20px;}

}


.newsroom-entry-date {
	font-style:oblique;
  color: $qitascDarkGrey;
  padding-bottom: 8px;
  @include stage00 {font-size: 10px;}
  @include stage01 {font-size: 12px;}
  @include stage02 {font-size: 14px;}
  @include stage03 {font-size: 16px;}
}


.newsroom-entry-description {
  color: $qitascDarkGrey;
  @include stage00 {font-size: 10px; display: none !important;}
  @include stage01 {font-size: 12px; display: inline !important;}
  @include stage02 {font-size: 14px; display: inline !important;}
  @include stage03 {font-size: 16px; display: inline !important;}

	padding-bottom: 1rem;

}

.newsroom-entry-ReadMore {
  margin-top: 10px !important;
  @extend .transitionColor;
  @include stage00 {font-size: 12px;}
  @include stage01 {font-size: 14px;}
  @include stage02 {font-size: 16px;}
  @include stage03 {font-size: 18px;}

	color: $qitascOrange !important;


}

.newsroom-entry-ReadMore:hover {
	color: $qitascDarkerGrey !important;
  text-decoration: underline;
}

// ##################################################################################
// ##################################################################################
//                                                                            #######
//            Newsroom Header Styles start here                               #######
//                                                                            #######
// ##################################################################################
// ##################################################################################
.NewsroomBackgroundContainer {
  background-color: $qitascDarkerGrey;
  min-height: 500px;
  padding-bottom: 200px;
}

.NewsroomHeader {
  @include stage00 {margin-top: $mainHeaderHeightMobile;}
  @include stage01 {margin-top: $mainHeaderHeightMobile;}
  @include stage02 {margin-top: $mainHeaderHeightDesktop;}
  @include stage03 {margin-top: $mainHeaderHeightDesktop;}
}
.NewsroomHeaderTitleColumn {
  margin-top: 100px !important;
}
.NewsroomHeaderTitle {
  @include stage00 {font-size: 25px;}
  @include stage01 {font-size: 30px;}
  @include stage02 {font-size: 35px;}
  @include stage03 {font-size: 40px;}
  color: $qitascOrange
}

.NewsroomHeaderDescription {

  @include stage00 {font-size: 14px;}
  @include stage01 {font-size: 16px;}
  @include stage02 {font-size: 18px;}
  @include stage03 {font-size: 20px;}
  color: $qitascLightGrey;
  font-weight: normal
}

.NewsroomHeaderSubDescription {
  @include stage00 {font-size: 14px;}
  @include stage01 {font-size: 16px;}
  @include stage02 {font-size: 18px;}
  @include stage03 {font-size: 20px;}
  color: $qitascLightGrey;
  font-weight: normal;
}

.NewsroomHeaderSubDescription a {
  @include stage00 {font-size: 14px;}
  @include stage01 {font-size: 16px;}
  @include stage02 {font-size: 18px;}
  @include stage03 {font-size: 20px;}
  color: $qitascOrange;
}
.NewsroomHeaderSubDescription a:hover {
  text-decoration: underline;
  color: $qitascGrey !important;
}
// ##################################################################################
// ##################################################################################
//                                                                            #######
//            Newsroom Article Styles are included here, this affects         #######
//            the file: _layouts/newsroomArticle.html                         #######
//                                                                            #######
// ##################################################################################
// ##################################################################################

.newsroomIndividualArticlePageExperienceContainer {
    margin-top: 300px;
}

.more {
  color: $qitascOrange !important;
}

.qitasc-article-content a {
  color: $qitascOrange !important;
  @extend .transitionColor;
}

.qitasc-article-content a:hover {
  color: $qitascGrey !important;
}


// ##################################################################################
// ##################################################################################
//                                                                            #######
//            Article Table Of Content Stylez are here                        #######
//                                                                            #######
// ##################################################################################
// ##################################################################################

$articleTableOfContentHeight: 70px;
$articleTableOfContentIconHeight: 50px;
$difference: ($articleTableOfContentHeight - $articleTableOfContentIconHeight)*(1/2);
.articleTableOfContent {
    width: 100%;
    position: fixed;
    background-color: $qitascGreyVariation;
    z-index: 9997 !important;

    @extend .transitionAll;
    @extend .shadowBoxNice;

    @include stage00{margin-top: $mainHeaderHeightMobile !important; min-height: $articleTableOfContentHeight; height: $articleTableOfContentHeight;}
    @include stage01{margin-top: $mainHeaderHeightMobile !important; min-height: $articleTableOfContentHeight; height: $articleTableOfContentHeight;}
    @include stage02{margin-top: $mainHeaderHeightDesktop !important; min-height: $articleTableOfContentHeight; height: $articleTableOfContentHeight;}
    @include stage03{margin-top: $mainHeaderHeightDesktop !important; min-height: $articleTableOfContentHeight; height: $articleTableOfContentHeight;}
}

.articleTableOfContentTitle {

  @include stage00 {font-size: 14px;}
  @include stage01 {font-size: 16px;}
  @include stage02 {font-size: 18px;}
  @include stage03 {font-size: 20px;}
  margin-top: $difference + 10;

  font-weight: bold;
  color: $qitascLightGrey;

  a {
    font-weight: bold;
    @include stage00 {font-size: 12px;}
    @include stage01 {font-size: 14px;}
    @include stage02 {font-size: 16px;}
    @include stage03 {font-size: 16px;}
    color: $qitascGrey;
  }
  a:hover {
    color: $qitascLightGrey;

  }
}


.articleTableOfContentIcon {
  color: $qitascLightGrey;
  @extend .transitionAll;
  min-height: $articleTableOfContentIconHeight;
  max-height: $articleTableOfContentIconHeight;
  height: $articleTableOfContentIconHeight;
  margin-top: $difference;

  @include stage00 {
    min-height: $articleTableOfContentIconHeight + 10;
    max-height: $articleTableOfContentIconHeight + 10;
    height: $articleTableOfContentIconHeight + 10;
  }

}
.articleTableOfContentIcon:hover {

}

.mainArticleHeader {

  @include stage00 { padding-left: 10px !important;padding-top: 100px !important;padding-bottom: 50px !important;}
  @include stage01 { padding-left: 10px !important;padding-top: 100px !important;padding-bottom: 50px !important;}
  @include stage02 { padding-left: 10px !important;padding-top: 200px !important;padding-bottom: 100px !important;}
  @include stage03 { padding-left: 10px !important;padding-top: 200px !important;padding-bottom: 100px !important;}
  background-color: $qitascDarkGrey !important;
  background-image: url();
  background-position: bottom center;
	background-repeat: no-repeat;
  font-size: 2.5rem;

	padding-left: 4rem;
	padding-right: 4rem;

   top: 100px;
   overflow: hidden;
   position: relative
}
.mainArticleHeader h1 {

  color: $qitascOrange !important;
  font-weight: bold;
  padding-top: 10px;
  padding-bottom: 10px;
  @include stage00 {font-size: 26px !important;}
  @include stage01 {font-size: 28px !important;}
  @include stage02 {font-size: 30px !important;}
  @include stage03 {font-size: 40px !important;}
}
.mainArticleHeader h4 {
  @include stage00 {font-size: 18px !important;}
  @include stage01 {font-size: 20px !important;}
  @include stage02 {font-size: 24px !important;}
  @include stage03 {font-size: 26px !important;}
  color: $qitascLightGrey !important;
  font-weight: bold;
  padding-top: 10px;
  padding-bottom: 10px;
  line-height: 30px;
}

#article-subheader > h4 {
  @include stage00 { line-height: 20px !important;}
  @include stage01 { line-height: 30px !important;}
  @include stage02 { line-height: 40px !important;}
  @include stage03 { line-height: 50px !important;}

}

// Best Practise Middle Allignment
// Tested On: IE10, [IE9, IE8 without transitions], Chrome, FireFox, Safari
.mainArticleImage {
    padding-top: 200px;
    text-align: center;
    display: inline-block;
    vertical-align: middle;
    /*for demonstration only*/
    height: 50%;

}

.mainArticleImageClass {
  @extend .shadowBoxNice;
  width: 75%;
}



.qitasc-article-content ul {list-style: none}
.qitasc-article-content li::before {content: "•"; color: $qitascTeal; display: inline-block; width: 1em;margin-left: -1em}

.qitasc-article-content {
    padding-top: 100px;
}
.qitasc-article-content h1, h2, h3, h4{
    color: #F7941E !important;
    font-weight: bold;
    padding-top: 10px;
    padding-bottom: 10px;
		background-size: 90% 100%;
    font-size: 30px !important;
    line-height: 3;
}
.qitasc-article-content img {

    @extend .shadowBoxNice;
    @extend .transitionOpacity;
    border: 5px solid $qitascGrey;
    border-style: inset;
    border-radius: 5px;

		max-height:90%;
		max-width:90%;
		display: block;
		margin-top: 20px;
		margin-bottom: 20px;
		margin-left: auto;
		margin-right: auto;

}

.qitasc-article-content img:hover {

   filter: alpha(opacity=120);
   opacity: 1.2;

}



/*
qitasc-white qitasc-productsandservices-managedservices-header p-b-2 m-b-6
newsroom-entry-date
orange
qitasc-article-header
article-subheader
qitasc-message-text-align
mainArticleImage
mainArticleImage-content
qitasc-articles-header-img
qitasc-article-content
*/

// ##################################################################################
// ##################################################################################
//                                                                            #######
//              Overwrite Markdownify Styles:                                 #######
//                                                                            #######
// ##################################################################################
// ##################################################################################

.highlighter-rouge {
  color: $qitascTeal !important;
}

.qitasc-article-content code.highlighter-rouge

{
  border: 0 !important;
  top: 5px;

  width: max-content !important;
  margin-left: 0% !important;
  margin-top: 5px !important;
  display: inline-block !important;
	-webkit-box-shadow: none;
	-moz-box-shadow: none;
	box-shadow: none;
  background-image: url() !important;
  overflow-x: hidden !important;
  overflow-y: hidden !important;

}

$background: $qitascTeal;
$accent-color: $qitascLightGrey;
$body-font-size: 100%;

code {
  @extend .shadowBoxNice;
  border: 15px solid $qitascGrey;
  border-style: inset;
  border-radius: 5px;

      max-height:90%;
      width: auto;
      position: relative;
      margin-left: auto;
      margin-right: auto;
      white-space: pre;
      word-wrap: normal;
      overflow-x: scroll;
      display: block;
      padding: 0 10px;
      background: $accent-color;
      background-image: linear-gradient(darken($accent-color, 3%) 50%, transparent 50%);
      background-size: 100% 3em;
      background-position: 0 1.5em;
      background-origin: content-box;
      color: $background;
      line-height: 1.5;
      font-size: 15px;
      font-weight: 300;
    }


// ##################################################################################
// ##################################################################################
//                                                                            #######
//            Pure CSS Checkbox collapsable are coming here                   #######
//                                                                            #######
// ##################################################################################
// ##################################################################################


/* ############################################################################################################################################
First we set the checkbox element to display: none. The checkbox will be invisible and its label will be used instead to check or uncheck it.
Later, you’ll see that we’ll use the CSS :checked pseudo-selector to style things differently when the hidden checkbox is checked:
############################################################################################################################################ */


input[type='checkbox'] {
  display: none;
}

/* ############################################################################################################################################
Next, we style our default label. Here nothing really special is going on, except for the fact that we make our label display as a block element with display: block:
############################################################################################################################################ */

.lbl-toggle {
	  display: block;
		cursor: pointer;
		transition: all 0.25s ease-out;

    background-color: #777;
    color: white;
    cursor: pointer;
    padding: 18px;
    width: 100%;
    border: none;
    text-align: left;
    outline: none;
    font-size: 15px;

}

.lbl-toggle:hover {
    background-color: $qitascLightGrey;
}



/* ############################################################################################################################################
For the small arrow, some clever use of borders makes it easy to create the triangle shape:
############################################################################################################################################ */

.lbl-toggle::before {
  content: ' ';
  display: inline-block;

  border-top: 5px solid transparent;
  border-bottom: 5px solid transparent;
  border-left: 5px solid currentColor;

  vertical-align: middle;
  margin-right: .7rem;
  transform: translateY(-2px);

  transition: transform .2s ease-out;
}

/* ############################################################################################################################################
Let’s also give some basic styles to the inner content:
############################################################################################################################################ */

.collapsible-content .content-inner {
  background: rgba(250, 224, 66, .2);
  border-bottom: 1px solid rgba(250, 224, 66, .45);

  border-bottom-left-radius: 7px;
  border-bottom-right-radius: 7px;
  padding: .5rem 1rem;
}

/* ############################################################################################################################################
Now we can start with the interesting part. By default, the collapsible-content div will have a max-height value of 0px, making it completely hidden:
############################################################################################################################################ */

.collapsible-content {
  max-height: 0px;
  overflow: hidden;
  transition: max-height .25s ease-in-out;


}

/* ############################################################################################################################################
When a collapsible’s checkbox gets checked behind the scenes by clicking its label, we’ll set the content div to a high-enough max-height
 value so that it can grow to display all its internal content.
We make use of the adjacent sibling selector (+) to select our content div when the checkbox is checked:
############################################################################################################################################ */
.toggle:checked + .lbl-toggle + .collapsible-content {
  max-height: 350px;
}
/* ############################################################################################################################################
We use max-height instead of height because we want to avoid using a hard-coded height and want to be able to place content of arbitrary height into our collapsibles.
And now we do something really similar using the adjacent sibling selector to rotate our little triangle shape when the collapsible is expanded
and to adjust the bottom right and border left radius of our label:
############################################################################################################################################ */
.toggle:checked + .lbl-toggle::before {
  transform: rotate(90deg) translateX(-3px);
}

.toggle:checked + .lbl-toggle {
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0;
}

/*
############################################################################################################################################
############################################################################################################################################
############################################################################################################################################
*/
